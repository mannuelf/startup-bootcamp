{"version":3,"sources":["App.js","serviceWorker.js","index.js"],"names":["App","className","href","src","width","height","frameborder","allowfullscreen","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"gOA+EeA,MA5Ef,WACI,OACI,yBAAKC,UAAU,OACX,4BAAQA,UAAU,cACd,yBAAKA,UAAU,QAAO,0BAAMA,UAAU,WAAhB,YAG1B,6BAASA,UAAU,OACf,yBAAKA,UAAU,eACX,yBAAKA,UAAU,iBACX,mDAKZ,6BAASA,UAAU,OACf,yBAAKA,UAAU,QACX,6BAASA,UAAU,wBACf,yBAAKA,UAAU,iBACX,uBAAGA,UAAU,cAAb,sZACA,4oBACA,mHACA,uLAGR,2BAAOA,UAAU,wBACb,yBAAKA,UAAU,iBACX,sDACA,wBAAIA,UAAU,aACV,iEACA,2DACA,2DACA,wDAEJ,6BACA,uBACIC,KAAK,2EACLD,UAAU,gBAFd,gBAWhB,6BAASA,UAAU,OACf,yBAAKA,UAAU,iBACX,wBAAIA,UAAU,6BAAd,YACA,4BACIE,IAAI,6QACJC,MAAM,OACNC,OAAO,MACPC,YAAY,IACZC,gBAAgB,OAM5B,6BAASN,UAAU,sBACf,yBAAKA,UAAU,iBACX,wBAAIA,UAAU,cAAd,yDACA,oUAIR,4BAAQA,UAAU,yBACd,yBAAKA,UAAU,iBACX,kDC5DAO,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2DCbNC,IAASC,OAAO,kBAAC,EAAD,MAASC,SAASC,eAAe,SD8H3C,kBAAmBC,WACrBA,UAAUC,cAAcC,MAAMC,MAAK,SAAAC,GACjCA,EAAaC,kB","file":"static/js/main.61659a03.chunk.js","sourcesContent":["import React from 'react';\nimport './css/App.css';\n\nfunction App() {\n    return (\n        <div className=\"App\">\n            <header className=\"App-header\">\n                <div className=\"logo\"><span className=\"sr-only\">Noroff</span></div>\n            </header>\n\n            <section className=\"row\">\n                <div className=\"hero-banner\">\n                    <div className=\"inner-padding\">\n                        <h1>Startup Bootcamp</h1>\n                    </div>\n                </div>\n            </section>\n\n            <section className=\"row\">\n                <div className=\"grid\">\n                    <article className=\"grid-item bg-color-a\">\n                        <div className=\"inner-padding\">\n                            <p className=\"first-para\">Call for Frontend, VFX, Games and Digital Marketing students online and on campus. Do you think you might have the next big business idea? Would you like to try and see if it can fly in the real world? Here’s your shot! Team up and pitch your very best idea in front of students and industry at our Noroff Startup bootcamp in January. Campus students are invited to lectures and pitching sessions.</p>\n                            <p>Cooperate with mentors to create something extraordinary over the course of four short and intense weeks.  Challenge yourself and your team to put everything you’ve got, and then some, into your work. Team up across VFX, Frontend and Games programs to up the game and push your limits even further. Learn how to strategically launch and market your work, how to communicate your brand and lift your business idea up from the ground. To finish it all off you will deliver your entire project in a 15 minute Grand Finale presentation. Time to hit the grand jury with your best shot! Are you excited yet?</p>\n                            <p>For more information - join our info meeting at Oslo campus - December 14th @12:15PM</p>\n                            <p>Online students from VFX, Games and Frontend studies are welcome to sign up for the bootcamp and be part of the campus experience for the full course.</p>\n                        </div>\n                    </article>\n                    <aside className=\"grid-item bg-color-b\">\n                        <div className=\"inner-padding\">\n                            <h2>External contributors:</h2>\n                            <ul className=\"item-list\">\n                                <li>Anne Worsøe - Bakken &amp; Bæck</li>\n                                <li>Anniken Fjelberg - 657 Oslo</li>\n                                <li>Ingar Bentsen - The Factory</li>\n                                <li>Christian Wig - Pivotic</li>\n                            </ul>\n                            <hr/>\n                            <a \n                                href=\"https://www.eventbrite.com/e/noroff-startup-bootcamp-tickets-52863010688\"\n                                className=\"btn-register\"\n                            >\n                                Register\n                            </a>\n                        </div>\n                    </aside>\n                </div>\n            </section>\n\n            <section className=\"row\">\n                <div className=\"inner-padding\">\n                    <h2 className=\"page-title text-centered \">Location</h2>\n                    <iframe \n                        src=\"https://www.google.com/maps/embed?pb=!1m18!1m12!1m3!1d999.5669112842014!2d10.754864357200955!3d59.92992156976396!2m3!1f0!2f0!3f0!3m2!1i1024!2i768!4f13.1!3m3!1m2!1s0x46416e625bebdd55%3A0x87598940160b87fa!2sNoroff%20Oslo!5e0!3m2!1sen!2sno!4v1576069085604!5m2!1sen!2sno\" \n                        width=\"100%\" \n                        height=\"450\" \n                        frameborder=\"0\"\n                        allowfullscreen=\"\"\n                        >\n                    </iframe>\n                </div>\n            </section>\n\n            <section className=\"row text-centered \">\n                <div className=\"inner-padding\">\n                    <h2 className=\"page-title\">Organizer Noroff School Of Technology & Digital Media</h2>\n                    <p>The students at Noroff are future digital innovators. You will be training hands-on from day one. And from day one, the industry will follow your education closely. We put ourselves in the place of your future employers, and came up with a wish list. Our curriculum stems from this exercise.</p>\n                </div>\n            </section>\n\n            <footer className=\"footer text-centered \">\n                <div className=\"inner-padding\">\n                    <p>Noroff Fagskole</p>\n                </div>\n            </footer>\n        </div>\n    );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}